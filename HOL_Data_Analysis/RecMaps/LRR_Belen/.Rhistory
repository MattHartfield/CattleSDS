# Derivative of my equation:
CubReg$coefficients
a = CubReg$coefficients[1]
b = CubReg$coefficients[2]
c = CubReg$coefficients[3]
d = CubReg$coefficients[4]
print(a)
print(b)
print(c)
print(d)
# Step 2: Per bin...
nb_bins = c(1:max(unique(chrD_selectionChrm$BinID))) # we are not interested in
# binID==0
list_recombin_rate = 0
list_midbins = 0
list_recombin_rate_check=0
for (bin in nb_bins){
print(bin)
chrD_selectionBin= chrD_selectionChrm[chrD_selectionChrm$BinID==bin,]
x1 = min(chrD_selectionBin$PhysD)
print(x1)
x2 = max(chrD_selectionBin$PhysD)
print(x2)
L = x2-x1
Midbin_perBin = x1+(L/2)
print(Midbin_perBin)
# Midbin_perBin is the same as (x1+x2)/2 # Wrong!
list_midbins[bin] = Midbin_perBin
cubic_regression_formula = expression(a + b*x + c*x^2 + d*x^3)
# Substituting the midbin point in the derivate function:
CubRegDeriv_Bin = eval(D(cubic_regression_formula, 'x'),
list(x=Midbin_perBin))
cub_check = b + 2*c*Midbin_perBin+ 3*d*Midbin_perBin^2
print(cub_check)
list_recombin_rate_check[bin] = cub_check
list_recombin_rate[bin] = CubRegDeriv_Bin/(10^(-6))  # check!!!
# Copy to file
cat(paste(chrm, bin, x1, x2, Midbin_perBin, CubRegDeriv_Bin/(10^(-6)), sep=","),
file="local_recomb_rate_per_bin_NEW.txt",append=TRUE, sep='\n')
}
print(list_midbins)
print(list_recombin_rate)
list_recombin_rate = list_recombin_rate
plot(c(1:length(list_midbins)), list_recombin_rate,
xlab='Midbin', ylab='Local recombination rate',
main=paste('Local recombi.rate: chrm', chrm),xaxt='n')
axis(side = 1, at=1:(length(list_midbins)), labels = F)
text(seq(1,length(list_midbins),by=1), par("usr")[3]-0.05,
srt = 60, adj=1, xpd = TRUE,
labels = list_midbins, cex=0.50)
abline(h=0)
}
dev.off()
read_csv("local_recomb_rate_per_bin_NEW.txt")
df=read_csv("local_recomb_rate_per_bin_NEW.txt")
names(df)
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","begin","end","mid", "cMperMb"))
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","begin","end","mid", "cMperMb"),progress = T)
names(df)
glimpse(df)
hist(df$cMperMb)
summary(df$cMperMb)
summary(df)
df %>%  filter(!is.na(cMperMb))
df %>%  filter(!is.na(cMperMb)) -> dfpurged
df %>%  filter(!is.na(cMperMb)) -> df
dim(df)
dim(df)
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","begin","end","mid", "cMperMb"),progress = T)
names(df)
glimpse(df)
dim(df)
hist(df$cMperMb)
summary(df$cMperMb)
summary(df)
df %>%  filter(!is.na(cMperMb)) -> df
dim(df)
ggplot(data = df) + geom_histogram(aes(x=expression, fill=chr)) + facet_wrap(~chr, ncol=2)
ggplot(data = df) + geom_histogram(aes(x=cMperMb, fill=chr)) + facet_wrap(~chr, ncol=2)
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
nBins=n(cMperMb)
median=median(cMperMb))
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb),
nBins=n(cMperMb))
head(df)
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","bin","begin","end","mid", "cMperMb"),progress = T)
names(df)
glimpse(df)
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb),
nBins=n(cMperMb))
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb))
ggplot(data = df) + geom_histogram(aes(x=cMperMb, fill=chr)) + facet_wrap(~chr, ncol=2)
df %>%  filter(!is.na(cMperMb)) -> df
dim(df)
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb))
ggplot(data = df) + geom_histogram(aes(x=cMperMb, fill=chr)) + facet_wrap(~chr, ncol=2)
ggplot(data = df) + geom_histogram(aes(x=cMperMb))
ggplot(data = df) + geom_histogram(aes(x=cMperMb),binwidth = 0.05)
ggplot(data = df) + geom_histogram(aes(x=cMperMb),binwidth = 0.1)
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","bin","begin","end","mid", "cMperMb"),progress = T)
names(df)
glimpse(df)
head(df)
dim(df)
hist(df$cMperMb)
summary(df$cMperMb)
summary(df)
df %>%  filter(!is.na(cMperMb)) -> df
chrD=read.table(file ="filtered_recombination_data_withBin")
names(chrD)=c("R_ID", "Chrm","PhysD","Pos3.0+1","Index",
"BTAU","BTAU+1","cM","ID1","Database",
"ID2","Type","Informative_Meiosis",
"Kosambi_distance","BinID")
head(chrD)
chrm=1 #choosing here one particular chromsome
Toscale=10^6 # I want to have Mb as physical distance units
chrD_selectionChrm = chrD[chrD[,2]==chrm,]
nb_data_in_local_rr <- table(chrD_selectionChrm[,15]) #local number of bins
plot(chrD_selectionChrm$PhysD/Toscale,chrD_selectionChrm$cM, pch=20, cex=0.25, col="grey30",
xlab="Cumulated Physical distance", ylab="CUMULATED cM", main=paste("Empirical trend on chr ", chrm))
chrm=1 #choosing here one particular chromsome
Toscale=10^6 # I want to have Mb as physical distance units
chrD_selectionChrm = chrD[chrD[,2]==chrm,]
chrD_selectionChrm$PhysD=chrD_selectionChrm$PhysD/Toscale
nb_data_in_local_rr <- table(chrD_selectionChrm[,15]) #local number of bins
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25, col="grey30",
xlab="Cumulated Physical distance", ylab="CUMULATED cM", main=paste("Empirical trend on chr ", chrm))
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25, col="grey30",
xlab="Cumulated Physical distance (Mb)", ylab="CUMULATED cM", main=paste("Empirical trend on chr ", chrm))
CubReg=lm(cM~PhysD + I(PhysD^2) + I(PhysD^3),
data=chrD_selectionChrm)
summary(CubReg)
CubReg$coefficients
a = CubReg$coefficients[1]
b = CubReg$coefficients[2]
c = CubReg$coefficients[3]
d = CubReg$coefficients[4]
names(CubReg)
plot(chrD_selectionChrm$PhysD,CubReg$fitted.values)
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25, col="grey30",
xlab="Cumulated Physical distance (Mb)", ylab="CUMULATED cM", main=paste("Empirical trend on chr ", chrm))
lines(chrD_selectionChrm$PhysD,CubReg$fitted.values, type = "l")
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25, col="grey30",
xlab="Cumulated Physical distance (Mb)", ylab="CUMULATED cM", main=paste("Obs versus fitted trend on chr ", chrm))
lines(chrD_selectionChrm$PhysD,CubReg$fitted.values, type = "l", col="corflowerblue", lwd=2)
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25, col="grey30",
xlab="Cumulated Physical distance (Mb)", ylab="CUMULATED cM", main=paste("Obs versus fitted trend on chr ", chrm))
lines(chrD_selectionChrm$PhysD,CubReg$fitted.values, type = "l", col="corflowerblue", lwd=2)
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25, col="grey30",
xlab="Cumulated Physical distance (Mb)", ylab="CUMULATED cM", main=paste("Obs versus fitted trend on chr ", chrm))
lines(chrD_selectionChrm$PhysD,CubReg$fitted.values, type = "l", col="cornflowerblue", lwd=2)
listChr=unique(chrD$Chrm)
listChr
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25,
col="grey30",
xlab="Cumulated Physical distance (Mb)", ylab="CUMULATED cM",
main=paste("Obs versus fitted trend on chr ", chrm))
listChr
for (chrm in 1:29){
chrD_selectionChrm = chrD[chrD[,2]==chrm,]
chrD_selectionChrm$PhysD=chrD_selectionChrm$PhysD/Toscale
CubReg=lm(cM~PhysD + I(PhysD^2) + I(PhysD^3),
data=chrD_selectionChrm)
plot(chrD_selectionChrm$PhysD,chrD_selectionChrm$cM, pch=20, cex=0.25,
col="grey30",
xlab="Cumulated Physical distance (Mb)", ylab="CUMULATED cM",
main=paste("Obs versus fitted trend on chr ", chrm))
lines(chrD_selectionChrm$PhysD,CubReg$fitted.values, type = "l",
col="cornflowerblue", lwd=2)
}
library(MASS)
Mut_sigma=0.1
Sigma=Mut_sigma * diag(2)
mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
SigmaM=Mut_sigma * diag(2)
mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
rexp(n = 1,rate = 1/2)
rexp(n = 1,rate = 1/2)
rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
plot(z0)
plot(z0, xlim=c(-2,2), ylim=c(-2,2))
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
plot(z0, xlim=c(-2,2), ylim=c(-2,2))
z0
plot(0, xlim=c(-2,2), ylim=c(-2,2))
plot(, xlim=c(-2,2), ylim=c(-2,2))
plot(NULL, xlim=c(-2,2), ylim=c(-2,2))
point(z0)
points(z0)
z0=c(myDist,0)
z0
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
lines(New_Muts)
plot(NULL, xlim=c(-2,2), ylim=c(-2,2), xlab="Z1", yÃ¦ab="Z2")
plot(NULL, xlim=c(-2,2), ylim=c(-2,2), xlab="Z1", ylab="Z2")
z0=c(myDist,0)
z0
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0)
New_Muts[,1]
New_Muts=z0+mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_Muts
z0=c(myDist,0)
z0
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0)
z0=c(myDist,0)
z0
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
Mut_sigma=0.1
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_Muts
New_phenos=z0+New_Muts
New_phenos
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0)
z0
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0)
points((myDist,0))
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(c(myDist,0))
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
z0[1]
z0[2]
XMuts=z0[1]+New_Muts[,1]
YMuts=z0[1]+New_Muts[,2]
XMuts
YMuts
New_Muts
points(XMuts,YMuts)
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
Mut_sigma=0.1
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_phenos=New_Muts
XMuts=c(z0[1],z0[1]+New_Muts[,1])
YMuts=c(z0[1], z0[1]+New_Muts[,2])
points(XMuts,YMuts)
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[2]
z0[1]
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_phenos=New_Muts
XMuts=z0[1]+New_Muts[,1])
YMuts=z0[1]+New_Muts[,2])
points(zO[1],z0[2], col="blue", pch=20)
points(XMuts,YMuts, col="red", pch=21)
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(zO[1],z0[2], col="blue", pch=20)
zO[1]
points(z0[1],z0[2], col="blue", pch=20)
points(XMuts,YMuts, col="red", pch=21)
New_Muts
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_phenos=New_Muts
XMuts=z0[1]+New_Muts[,1]
YMuts=z0[1]+New_Muts[,2]
points(z0[1],z0[2], col="blue", pch=20)
points(XMuts,YMuts, col="red", pch=21)
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_phenos=New_Muts
XMuts=z0[1]+New_Muts[,1]
YMuts=z0[1]+New_Muts[,2]
points(z0[1],z0[2], col="blue", pch=20)
z0[1]
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_phenos=New_Muts
XMuts=z0[1]+New_Muts[,1]
YMuts=z0[1]+New_Muts[,2]
points(z0[1],z0[2], col="blue", pch=20)
points(XMuts,YMuts, col="red", pch=21)
z0[1]
z0[2]
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_phenos=New_Muts
XMuts=z0[1]+New_Muts[,1]
YMuts=z0[1]+New_Muts[,2]
points(z0[1],z0[2], col="blue", pch=20)
points(XMuts,YMuts, col="red", pch=21)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_Muts
New_Muts
Z1Muts=z0[1]+New_Muts[,1]
Z2Muts=z0[1]+New_Muts[,2]
Z1Muts
z0[1]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
points(Z1Muts,Z2Muts, col="red", pch=21)
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
New_Muts
Z1Muts=z0[1]+New_Muts[,1]
Z2Muts=z0[1]+New_Muts[,2]
Z1Muts
Z2Muts
points(Z1Muts,Z2Muts, col="red", pch=21)
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
points(z0)
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
Mut_sigma=0.2
z0[1]
z0[2]
myDist=rexp(n = 1,rate = 1.2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
Z1Muts=z0[1]+New_Muts[,1]
Z2Muts=z0[1]+New_Muts[,2]
points(Z1Muts,Z2Muts, col="red", pch=21)
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
Z1Muts=z0[1]+New_Muts[,1]
Z2Muts=z0[1]+New_Muts[,2]
points(Z1Muts,Z2Muts, col="red", pch=21)
z0[1]
z0[2]
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
myDist=rexp(n = 1,rate = 1/2)
z0=c(myDist,0)
z0[1]
z0[2]
plot(NULL, xlim=c(-5,5), ylim=c(-5,5), xlab="Z1", ylab="Z2")
points(z0[1],z0[2], col="blue", pch=20)
Mut_sigma=0.2
SigmaM=Mut_sigma * diag(2)
New_Muts=mvrnorm(n = 5,mu = c(0,0),Sigma =SigmaM )
Z1Muts=z0[1]+New_Muts[,1]
Z2Muts=z0[1]+New_Muts[,2]
points(Z1Muts,Z2Muts, col="red", pch=21)
Z1Muts
Z2Muts
allopolysfs=read.csv("AkamAhal_mkPolyMAF_18_update.txt", sep="\t",header=T)
library(tidyverse)
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","bin","begin","end","mid", "cMperMb"),progress = T)
names(df)
glimpse(df)
head(df)
dim(df)
summary(df)
df %>%  filter(!is.na(cMperMb)) -> df # excluding bins with no LRR
dim(df)
ggplot(data = df) + geom_histogram(aes(x=cMperMb),binwidth = 0.1)
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb))
ggplot(data = df) + geom_histogram(aes(x=cMperMb, fill=chr)) + facet_wrap(~chr, ncol=2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","bin","begin","end","mid", "cMperMb"),progress = T)
names(df)
glimpse(df)
head(df)
dim(df)
summary(df)
df %>%  filter(!is.na(cMperMb)) -> df # excluding bins with no LRR
dim(df)
ggplot(data = df) + geom_histogram(aes(x=cMperMb),binwidth = 0.1)
ggplot(data = df) + geom_histogram(aes(x=cMperMb, fill=chr)) + facet_wrap(~chr, ncol=2)
ggplot(data = df) + geom_histogram(aes(x=cMperMb, fill=chr)) + facet_wrap(~chr, ncol=1)
ggplot(data = df) + geom_histogram(aes(x=cMperMb),binwidth = 0.1)
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb))
ggplot(data = df) +
geom_histogram(aes(x=cMperMb, fill=chr)) +
facet_wrap(~chr, ncol=1) +
NULL
ggplot(data = df) +
geom_histogram(aes(x=cMperMb, fill=chr)) +
facet_wrap(~chr) +
NULL
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb)) ->cMperMBChrom
cMperMBChrom
SEs=se()) ->cMperMBChrom
Nbins=n()) ->cMperMBChrom
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb),
Nbins=n(),
SEs=se()) ->cMperMBChrom
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb),
Nbins=n(),
SEs=SE()) ->cMperMBChrom
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb),
Nbins=n(),
SEs=var()/n()) ->cMperMBChrom
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb),
Nbins=n()) ->cMperMBChrom
cMperMBChrom
librar
library(tidyverse)
df=read_csv("local_recomb_rate_per_bin_NEW.txt",col_names = c("chr","bin","begin","end","mid", "cMperMb"),progress = T)
names(df)
glimpse(df)
head(df)
dim(df)
summary(df)
dim(df)
ggplot(data = df) + geom_histogram(aes(x=cMperMb),binwidth = 0.1)
df %>%  filter(!is.na(cMperMb)) -> df # excluding bins with no LRR estimated
ggplot(data = df) + geom_histogram(aes(x=cMperMb),binwidth = 0.1)
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb))
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb)) ->dfSummaryByChr
dfSummaryByChr
dim(dfSummaryByChr)
df %>% group_by(chr) %>%
summarise(mean=mean(cMperMb),
median=median(cMperMb),
nBins=n()) ->dfSummaryByChr
dfSummaryByChr
dim(dfSummaryByChr)
ggplot(data = df) + geom_histogram(aes(x=cMperMb, fill=chr)) + facet_wrap(~chr, ncol=2)
